name: Main and Deploy

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x]

    env:
      NODE_OPTIONS: --max-old-space-size=4096
      CACHE_VERSION: v2

    steps:
      - uses: actions/checkout@v2.5.0

      # Beginning of yarn setup, keep in sync between all workflows, see ci.yml
      - name: use node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: 18.x
      - name: cache all node_modules
        id: cache-modules
        uses: actions/cache@v2
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-v${{ matrix.node-version }}-${{ env.CACHE_VERSION }}-node_modules-${{ hashFiles('yarn.lock', '**/package.json') }}
      - name: find location of global yarn cache
        id: yarn-cache
        if: steps.cache-modules.outputs.cache-hit != 'true'
        run: echo "dir=$(yarn cache dir)" >> $GITHUB_OUTPUT
      - name: cache global yarn cache
        uses: actions/cache@v2
        if: steps.cache-modules.outputs.cache-hit != 'true'
        with:
          path: ${{ steps.yarn-cache.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ env.CACHE_VERSION }}-${{ hashFiles('yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-${{ env.CACHE_VERSION }}-
      - name: yarn install
        run: yarn install --frozen-lockfile
      # End of yarn setup
      - name: build
        run: yarn build

  deploy:
    needs: build

    if: github.ref == 'refs/heads/main'

    runs-on: ubuntu-latest

    permissions:
      id-token: write
      contents: write

    strategy:
      matrix:
        node-version: [18.x]

    env:
      NODE_OPTIONS: --max-old-space-size=4096

    steps:
      - uses: actions/checkout@v2.5.0
      
      # Beginning of yarn setup, keep in sync between all workflows, see ci.yml
      - name: use node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - name: cache all node_modules
        id: cache-modules
        uses: actions/cache@v2
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-v${{ matrix.node-version }}-v2-node_modules-${{ hashFiles('yarn.lock', '**/package.json') }}
      - name: find location of global yarn cache
        id: yarn-cache
        if: steps.cache-modules.outputs.cache-hit != 'true'
        run: echo "dir=$(yarn cache dir)" >> $GITHUB_OUTPUT
      - name: cache global yarn cache
        uses: actions/cache@v2
        if: steps.cache-modules.outputs.cache-hit != 'true'
        with:
          path: ${{ steps.yarn-cache.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: yarn install
        run: yarn install --frozen-lockfile
      # End of yarn setup

      - name: Deploy
        run: | 
          npm run deploy -- -m ":rocket: Update App"